class Solution:
    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:
        if len(nums2) < len(nums1):
            nums1, nums2 = nums2, nums1
        total = len(nums1) + len(nums2)
        half = total // 2
        left1, right1 = 0, len(nums1) - 1
        while True:
            mid1 = (left1 + right1) // 2
            mid2 = half - mid1 - 2
            A1 = nums1[mid1] if mid1 >= 0 else float('-inf')
            A2 = nums1[mid1 + 1] if mid1 + 1 < len(nums1) else float('inf')
            B1 = nums2[mid2] if mid2 >= 0 else float('-inf')
            B2 = nums2[mid2 + 1] if mid2 + 1 < len(nums2) else float('inf')

            if A1 <= B2 and B1 <= A2:
                return min(A2, B2) if total % 2 else (max(A1, B1) + min(A2, B2)) / 2
            elif A1 > B2:
                right1 = mid1 - 1
            else:
                left1 = mid1 + 1
