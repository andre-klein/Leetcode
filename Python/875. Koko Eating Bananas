# Solution 1:

class Solution:
    def minEatingSpeed(self, piles: List[int], h: int) -> int:
        def counter(x, total=0):
            for num in piles:
                total += -(-num // x)
            return total
        
        left, right = 1, max(piles)
        while left != right:
            mid = (left + right) // 2
            if counter(mid) > h:
                left = mid + 1
            else:
                right = mid
        return left

# Solution 2:

class Solution:
    def minEatingSpeed(self, piles: List[int], h: int) -> int:
        left, right = 1, max(piles)
        while left != right:
            mid = (left + right) // 2
            if sum(-(-num // mid) for num in piles) > h:
                left = mid + 1
            else:
                right = mid
        return left
