class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        q, count, fresh = collections.deque(), 0, 0

        for r in range(len(grid)):
            for c in range(len(grid[0])):
                if grid[r][c] == 2: q.append((r, c))
                elif grid[r][c] == 1: fresh += 1

        while q:
            cur = fresh
            for i in range(len(q)):
                r,c = q.popleft()
                if grid[r][c] == 1:
                    grid[r][c] = 2
                    fresh -= 1
                if r > 0 and grid[r-1][c] == 1: q.append((r-1,c))
                if r < len(grid) - 1 and grid[r+1][c] == 1: q.append((r+1,c))
                if c > 0 and grid[r][c-1] == 1: q.append((r,c-1))
                if c < len(grid[0]) - 1 and grid[r][c+1] == 1: q.append((r,c+1))
            if fresh < cur: count += 1

        return count if fresh == 0 else -1
