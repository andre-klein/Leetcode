class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        visited, count = set(), 0

        def dfs(r, c):
            visited.add((r, c))
            if r > 0 and (r-1, c) not in visited and grid[r-1][c] == '1':
                dfs(r-1, c)
            if r < len(grid)-1 and (r+1, c) not in visited and grid[r+1][c] == '1':
                dfs(r+1, c)
            if c > 0 and (r, c-1) not in visited and grid[r][c-1] == '1':
                dfs(r, c - 1)
            if c < len(grid[0])-1 and (r, c+1) not in visited and grid[r][c+1] == '1':
                dfs(r, c + 1)

        for r in range(len(grid)):
            for c in range(len(grid[0])):
                if grid[r][c] == '1' and (r, c) not in visited:
                    count += 1
                    dfs(r, c)

        return count
        
# BFS
